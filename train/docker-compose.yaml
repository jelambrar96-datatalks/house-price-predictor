services:

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: $MINIO_ACCESS_KEY
      MINIO_SECRET_KEY: $MINIO_SECRET_KEY
    volumes:
      - minio_data:/data
    networks:
      - train


  minio-bucket-creator:
    image: minio/mc
    container_name: minio-bucket-creator
    entrypoint: sh
    command: -c "mc config host add minio http://minio:9000 $MINIO_ACCESS_KEY $MINIO_SECRET_KEY && mc mb minio/mlflow-artifacts"
    depends_on:
      - minio
    networks:
      - train


  postgres:
    image: postgres:latest
    environment:
      - "POSTGRES_USER=mlflow"
      - "POSTGRES_PASSWORD=mlflow_pass"
    volumes: 
      - postgres_data:/var/lib/postgresql/data
    networks:
      - train


  mlflow:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - "BACKEND_URI=postgresql://mlflow:mlflow_pass@postgres:5432"
      - "MLFLOW_S3_ENDPOINT_URL=http://minio:9000"
      - "ARTIFACT_ROOT=s3://mlflow-artifacts/"
      - "AWS_ACCESS_KEY_ID=mlflow_access_key"
      - "AWS_SECRET_ACCESS_KEY=mlflow_secret_key"
    depends_on:
      - postgres
      - minio
    networks:
      - train


  train:
    build:
      context: .
      dockerfile: Dockerfile
    image: train
    container_name: train
    command: python train.py
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - MINIO_ACCESS_KEY=$MINIO_ACCESS_KEY
      - MINIO_SECRET_KEY=$MINIO_SECRET_KEY
    depends_on:
      - db
    networks:
      - train

volumes:
  postgres_data:
  minio_data:
